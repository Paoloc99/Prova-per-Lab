version: '3'
services:
  db:
    image: docker.micegroup.it/mysql-prova:5.7
    command: --lower_case_table_names=1
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
    networks:
      - net
    ports:
      - "3306:3306"
    volumes:
      - databases:/var/lib/mysql
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 20m

  phpmyadmin:
    image: docker.micegroup.it/phpmyadmin
    restart: always
    ports:
      - 80:80
    environment:
      - PMA_ARBITRARY=1
      - TZ="Europe/Rome"
      - PMA_HOSTS=db
    networks:
      - net
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 20m

  keycloak:
    image: docker.micegroup.it/jboss/keycloak:14.0.0
    networks:
      - net
    ports:
      - 8282:8080
    environment:
      DB_VENDOR: MYSQL
      DB_DATABASE: keycloak
      DB_ADDR: db
      DB_PORT: 3306
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      JDBC_PARAMS: "useSSL=false"
      PROXY_ADDRESS_FORWARDING: "true"
    depends_on:
      - db
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
    logging:
      driver: "json-file"
      options:
        max-file: 5
        max-size: 20m

  agent:
    image: docker.micegroup.it/portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - net
    deploy:
      mode: global
      placement:
        constraints: [ node.platform.os == linux ]

  portainer:
    image: docker.micegroup.it/portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer_data:/data
    networks:
      - net
    ports:
      - "9090:9000/tcp"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]

  prova-ms-store:
    image: docker.micegroup.it/prova-ms-store:0.0.1-SNAPSHOT
    environment:
      PORT: 8080
      KK_URL: keycloak
      KK_PORT: 8080
    networks:
      - net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.platform.os == linux ]
    ports:
      - "8014:8080/tcp"
    build:
      context: modules/prova-be/prova-ms-store
      dockerfile: Dockerfile
    depends_on:
      - keycloak
  prova-ms-database:
    image: docker.micegroup.it/prova-ms-database:0.0.1-SNAPSHOT
    environment:
      PORT: 8080
      KK_URL: keycloak
      KK_PORT: 8080
    networks:
      - net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.platform.os == linux ]
    ports:
      - "8015:8080/tcp"
    build:
      context: modules/prova-be/prova-ms-database
      dockerfile: Dockerfile
    depends_on:
      - keycloak
  prova-frontend:
    image: docker.micegroup.it/prova-frontend:0.0.1-SNAPSHOT
    environment:
      GATEWAY_URL: http://192.168.111.71
      GATEWAY_PORT: 8090
      KK_URL: http://192.168.111.71
      KK_PORT: 8282
    build:
      context: modules/prova-fe
      dockerfile: Dockerfile
    depends_on:
      - keycloak
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.platform.os == linux ]
    ports:
      - "4200:8080/tcp"
    networks:
      - net
  prova-gateway:
    image: docker.micegroup.it/prova-gateway:0.0.1-SNAPSHOT
    environment:
      STORE_URL: prova-ms-store
      STORE_PORT: 8080
      DATABASE_URL: prova-ms-database
      DATABASE_PORT: 8080
    networks:
      - net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.platform.os == linux ]
    ports:
      - "8090:8080/tcp"
    build:
      context: modules/prova-be/prova-gateway
      dockerfile: Dockerfile
    depends_on:
      - keycloak
volumes:
  portainer_data:
  databases:
networks:
  net:
    driver: overlay
